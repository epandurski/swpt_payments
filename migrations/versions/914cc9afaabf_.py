"""empty message

Revision ID: 914cc9afaabf
Revises: 
Create Date: 2019-08-14 22:45:41.933787

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '914cc9afaabf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('offer',
    sa.Column('creditor_id', sa.BigInteger(), nullable=False, comment='The payee, also the one that is responsible to supply the goods or services.'),
    sa.Column('offer_id', postgresql.BYTEA(length=12), nullable=False, comment='A random sequence of bytes. Along with `creditor_id` uniquely identifies the offer. Should be impossible to guess.'),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('debtor_ids', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=False, comment='The payment should go through one of these debtors. Each element in this array must have a corresponding element in the `debtor_amounts` array. Note thatthe database schema allows some or all of the elements to be `None`, which should be handled with care.'),
    sa.Column('debtor_amounts', postgresql.ARRAY(sa.BigInteger(), dimensions=1), nullable=False, comment='Each element in this array must have a corresponding element in the `debtor_ids` array. Note that the database schema allows one debtor ID to occur more than once in the `debtor_ids` array, each time with a different corresponding amount. The payer is expected to transfer one of the amounts  corresponding to the chosen debtor. Also note that the database schema allows some or all of the `debtor_amounts` elements to be `None` or a negative number, which should be handled as if they were zeros. '),
    sa.Column('offer_deadline_ts', sa.TIMESTAMP(timezone=True), nullable=True, comment='The offer will not be valid after this deadline.'),
    sa.Column('created_at_ts', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.CheckConstraint('array_ndims(debtor_amounts) = 1'),
    sa.CheckConstraint('array_ndims(debtor_ids) = 1'),
    sa.CheckConstraint('cardinality(debtor_ids) = cardinality(debtor_amounts)'),
    sa.CheckConstraint('length(offer_id) = 12'),
    sa.PrimaryKeyConstraint('creditor_id', 'offer_id'),
    comment='Represents a  proposal to supply some goods or services for a given price.'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('offer')
    # ### end Alembic commands ###
